package home_work_1;

// 2.1

public class SecondTask {
    public static void main(String[] args) {

        int a = 5;  //a,b,c - Для примеров 2.1 - 2.5
        int b = 2;
        int c = 8;
        int d = 20; //d,e,f - Для примеров 2.6 - 2.7
        int e = 68;
        int f = 22;
        int g = 6;  //g,h,i,j - Для примера 2.8
        int h = 3;
        int i = 12;
        int j = 119;

        int result1 = a + b / c;     // результатом решения должно быть число 5.25; в соответствии с условием задачи компилируется результат 5(так как idea работая со значениями int округлит значение после запятой в меньшую сторону до целочисленого значения)
        System.out.println(result1);
//2.2
        int result2 = (a + b) / c;
        System.out.println(result2); // результат 0.825 => компилируется 0(так как idea работая со значениями int округлит значение после запятой в меньшую сторону до целочисленого значения)
//2.3
        a = 5;
        b = 2;
        c = 8;
        int result3 = (a + b++) / c; // результат 1 => компилируется 0 Если изменить b++ на ++b результатом компиляции будет верное значение 1
        System.out.println(result3); // инкремент значения b произойдёт только после записи выражения в result 3
//2.4
        a = 5;
        b = 2;
        c = 8;
        int result4 = (a + b++) / --c; // результат 1,142857142857143 => компилируется 1(так как idea работая со значениями int округлит значение после запятой в меньшую сторону до целочисленого значения)
        System.out.println(result4);   // инкремент значения b и c произойдёт только после записи выражения в result 4
//2.5
        a = 5;
        b = 2;
        c = 8;
        int result5 = (a * b >> b++) / --c; // результат 0,1428571428571429 => компилируется 0(так как idea работая со значениями int округлит значение после запятой в меньшую сторону до целочисленого значения)
        System.out.println(result5);        // инкремент значения b и c произойдёт только после записи выражения в result 5
//2.6
        a = 5;
        b = 2;
        c = 8;
        int result6 = (a + b > d
                ? e
                : f * b >> b++)
                / --c;                      // результат 0,7142857142857143 => компилируется 1 Почему??? - у меня нет ответа!
        System.out.println(result6);        // инкремент значения b c произойдёт только после записи выражения в result 6
//2.7
        a = 5;
        b = 2;
        c = 8;
        d = 20;
        e = 68;
        f = 22;
        int result7 = (a + b > d
                ? e
                : f * b >> b++)             // условие >= делает данное уравнение некорректным (12>20?true:5)/7
                / --c;                      // тернарный оператор не может принимать в качестве значения логическое выражение
        System.out.println(result7);        // инкремент значения b, c произойдёт только после записи выражения в result 7
//2.8
        boolean result8 = g - b > h && i * i <= j; // выражение составлено коррекно => результат false
        System.out.println(result8);
//2.9
        boolean result9 = true && false;     // результат false
        System.out.println(result9);
    }
}
//        2.1 5+2/8 = 5.25
//        2.2 (5+2)/8 = 7/8 = 0.875
//        2.3 (5+2++)/8 = (5+3)/8 = 1
//        2.4 (5+2++)/--8 = (5+3)/7 = 1,142857142857143
//        2.5 (5*2>>2++)/--8 = (10>>3)/7 = 1/7 = 0,1428571428571429
//        2.6 (5+7>20?68:22*2>>2++)/--8 = (12>20?68:44>>3)/7 == (12>20?68:5)/7 = 0,7142857142857143
//        2.7 (5+7>20?68>=68:22*2>>2++)/--8 = (12>20?true:5)/7 = условие >= делает данное уравнение некорректным
//        2.8 6-2>3&&12*12<=119 = 4>3&&144<=119 = true && false  = false
//        2.9 true && false = false
